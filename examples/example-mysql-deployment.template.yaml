AWSTemplateFormatVersion: "2010-09-09"
Description: "Deploy MySQL using portwox volume"
Parameters:
  KubeManifestLambdaArn:
    Type: String
  KubeConfigPath:
    Type: String
  KubeConfigKmsContext:
    Type: String
    Default: "EKSQuickStart"
Resources:
  # This resource creates a ConfigMap in the target cluster. It retrieves and decrypts a kms encrypted
  # kubernetes config file, which is automatically created when customers deploy an EKS cluster with the quickstart,
  # for bring-your-own-cluster the customer must encrypt and upload a config file prior to launching the stack.
  #
  # The "Manifest" property is an exact representation of a regular kubernetes resource manifest, on stack create
  # `kubectl create --save-config` is called, on stack update `kubectl apply` and on stack delete `kubectl delete`
  #
  # The following elements are available to be used in other cloudformation resources using !GetAtt:
  # name, namespace, resourceVersion, selfLink, uid
  KubeManifestPortworxMySQLDeployment:
    Type: "Custom::KubeManifest"
    Version: '1.0'
    Properties:
      # The lambda function that executes the manifest against the cluster. This is created in one of the parent stacks
      ServiceToken: !Ref KubeManifestLambdaArn
      # S3 path to the encrypted config file eg. s3://my-bucket/kube/config.encrypted
      KubeConfigPath: !Ref KubeConfigPath
      # context for KMS to use when decrypting the file
      KubeConfigKmsContext: !Ref KubeConfigKmsContext
      # Kubernetes manifest
      Manifest:
        apiVersion: extensions/v1beta1
        kind: Deployment
        metadata:
          name: mysql
        spec:
          replicas: 1
          strategy:
            rollingUpdate:
              maxSurge: 1
              maxUnavailable: 1
            type: RollingUpdate
          template:
            metadata:
              labels:
                app: mysql
            spec:
              containers:
              - name: mysql
                image: mysql:5.6
                env:
                  # Use secret in real usage
                - name: MYSQL_ROOT_PASSWORD
                  value: password
                - name: ENVVARTEST
                  value: foo
                ports:
                - containerPort: 3306
                  name: mysql
                volumeMounts:
                - name: mysql-data
                  mountPath: /var/lib/mysql
              volumes:
              - name: mysql-data
                persistentVolumeClaim:
                  claimName: mysql-data
Outputs:
  # Examples for using the outputs of the KubeManifestExample resource
  MySQLDeploymentUid:
    Value: !GetAtt KubeManifestPortworxMySQLDeployment.uid
  MySQLDeploymentSelfLink:
    Value: !Ref KubeManifestPortworxMySQLDeployment